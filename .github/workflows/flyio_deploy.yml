name: Deploy to Fly.io

on:
  # Trigger the workflow manually
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Set up Docker Buildx for efficient image building
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Create a cache directory for Docker layers
      - name: Create Cache Directory
        run: mkdir -p ${{ github.workspace }}/.buildx-cache

      # Cache Docker layers to speed up subsequent builds
      - name: Cache Docker Layers
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Deploy the application to Fly.io
      - name: Deploy to Fly.io
        env:
          # Set the Fly.io API token from repository secrets
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          # Install the Fly.io CLI
          curl -L https://fly.io/install.sh | sh

          # Set the Fly.io CLI installation path
          export FLYCTL_INSTALL="/home/runner/.fly"
          export PATH="$FLYCTL_INSTALL/bin:$PATH"

          # Deploy the application using the specified Dockerfile and options
          flyctl deploy --dockerfile ./Dockerfile --remote-only -a tech-entity-recognition --build-arg BUILDKIT_INLINE_CACHE=1